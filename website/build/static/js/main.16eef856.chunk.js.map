{"version":3,"sources":["components/organisms/home/about/index.tsx","components/atoms/blog-card-element/index.tsx","components/molecules/blog-cards/index.tsx","components/organisms/home/blog/index.tsx","components/atoms/project-card-element/index.tsx","components/molecules/project-cards/index.tsx","components/organisms/home/featured/index.tsx","components/organisms/home/overview/index.tsx","components/atoms/testimonial-card-element/index.tsx","components/molecules/testimonial-cards/index.tsx","components/organisms/home/testimonials/index.tsx","components/organisms/seo/index.tsx","pages/home.tsx","components/templates/home/default/index.tsx","pages/404.tsx","components/organisms/footer/index.tsx","generated/graphql.tsx","providers/auth.provider.tsx","providers/index.tsx","components/atoms/page-list-element/index.tsx","components/molecules/pages-list/index.tsx","components/atoms/social-list-element/index.tsx","components/molecules/socials-list/index.tsx","components/organisms/header/index.tsx","components/organisms/login/index.tsx","components/templates/layout/default/index.tsx","routes.tsx","reportWebVitals.ts","index.tsx"],"names":["About","className","href","target","icon","faFileAlt","BlogCard","title","description","path","createdAt","img","to","blogs","BlogCards","map","blog","i","length","faArrowAltCircleRight","Blog","ProjectCard","tags","client","tag","faEye","projects","ProjectCards","project","Featured","skills","icons","name","faJsSquare","faVuejs","faReact","faEmber","faNodeJs","faPython","faGitAlt","faDev","faHtml5","faCss3","faAndroid","faSwift","Overview","skill","TestimonialCard","message","lastname","job","company","avatar","faQuoteLeft","testimonials","TestimonialCards","testimonial","Testimonials","SEO","lang","meta","children","Helmet","titleTemplate","content","concat","charSet","rel","Home","type","defer","src","NotFoundPage","Footer","LoginDocument","gql","LogoutDocument","AuthContext","createContext","isLoggedIn","user","AuthProvider","props","baseOptions","u","localStorage","getItem","useApolloClient","useState","setUser","setIsLoggedIn","Apollo","logoutMutation","logout","a","clear","clearStore","console","log","Provider","value","ApolloClient","cache","InMemoryCache","link","createHttpLink","credentials","uri","context","auth","Providers","library","add","fas","PageListElement","prefix","activeClassName","pages","PagesList","page","fab","SocialListElement","socialMedias","SocialsList","socialMedia","Header","isChecked","JSON","parse","sessionStorage","useContext","checked","setChecked","onClick","faSignOutAlt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","faAdjust","defaultChecked","onChange","setItem","stringify","htmlFor","Login","errors","setErrors","email","setEmail","password","setPassword","login","hasError","key","indexOf","handleSubmit","event","preventDefault","e","includes","push","variables","data","$","trigger","document","querySelector","remove","classList","tabIndex","role","aria-hidden","data-backdrop","data-keyboard","noValidate","onSubmit","data-dismiss","required","currentTarget","test","String","toLowerCase","index","splice","placeholder","Layout","routes","component","Routes","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.16eef856.chunk.js","sourcesContent":["import React, { FC } from \"react\";\n// import Image from \"../../../atoms/image\"\n// import { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  // faArrowAltCircleRight,\n  faFileAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst About: FC = () => {\n  return (\n    <section className=\"about-me-section p-3 p-lg-5 theme-bg-light\">\n      <div className=\"container\">\n        <div className=\"profile-teaser media flex-column flex-lg-row\">\n          <div className=\"media-body\">\n            <h2 className=\"name font-weight-bold mb-1\">Luis Díaz</h2>\n            <div className=\"tagline mb-3\">Software Engineer</div>\n            <div className=\"bio mb-4\">\n              I'm a software engineer specialised in frontend and backend\n              development for complex scalable web apps.\n              {/* I write about software development on <Link to=\"/blog\">my blog</Link>.  */}{\" \"}\n              Want to know how I may help your project? Check out my\n              {/* project{\" \"}\n              <Link to=\"/portfolio\">portfolio</Link> and */}\n              <a\n                href=\"Luis_Diaz_Software_Engineer.pdf\"\n                target=\"_blank\"\n              >\n                {\" \"}\n                online resume\n              </a>\n              .\n            </div>\n            <div className=\"mb-4\">\n              {/* <Link to=\"/portfolio\" className=\"btn btn-primary mr-2 mb-3\">\n                <FontAwesomeIcon\n                  icon={faArrowAltCircleRight}\n                  className=\"mr-2\"\n                />\n                <span className=\"d-none d-md-inline\">View</span> Portfolio\n              </Link> */}\n              <a\n                href=\"Luis_Diaz_Software_Engineer.pdf\"\n                target=\"_blank\"\n                className=\"btn btn-secondary mb-3\"\n              >\n                <FontAwesomeIcon icon={faFileAlt} className=\"mr-2\" />\n                <span className=\"d-none d-md-inline\">View</span> Resume\n              </a>\n            </div>\n          </div>\n          {/*<Image name=\"profile-lg\" />*/}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n","import React, { FC, PropsWithChildren } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport interface IBlogCard {\n  title: string;\n  description: string;\n  path: string;\n  img: string;\n  createdAt: string;\n}\n\nconst BlogCard: FC<IBlogCard> = ({\n  title,\n  description,\n  path,\n  img,\n  createdAt,\n}: PropsWithChildren<IBlogCard>) => {\n  return (\n    <div className=\"col-md-4 mb-5\">\n      <div className=\"card blog-post-card\">\n        {/* <img\n              className=\"card-img-top\"\n              src=\"assets/images/blog/blog-post-thumb-card-1.jpg\"\n              alt=\"image\"\n            /> */}\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">\n            <Link className=\"theme-link\" to={`/blog/${path}`}>\n              {title}\n            </Link>\n          </h5>\n          <p className=\"card-text\">{description}</p>\n          <p className=\"mb-0\">\n            <Link className=\"more-link\" to={`/blog/${path}`}>\n              Read more &rarr;\n            </Link>\n          </p>\n        </div>\n        <div className=\"card-footer\">\n          <small className=\"text-muted\">{createdAt}</small>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogCard;\n","import { faArrowAltCircleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BlogCard, { IBlogCard } from \"../../atoms/blog-card-element\";\n\nconst blogs: Array<IBlogCard> = [];\n\nconst BlogCards: FC = () => {\n  return (\n    <>\n      <div className=\"row\">\n        {blogs.map((blog, i) => (\n          <BlogCard\n            key={i}\n            createdAt={blog.createdAt}\n            description={blog.description}\n            img={blog.img}\n            path={blog.path}\n            title={blog.title}\n          />\n        ))}\n      </div>\n      <div className=\"text-center py-3\">\n        {blogs.length > 0 ? (\n          <Link to=\"/blog\" className=\"btn btn-primary\">\n            <FontAwesomeIcon icon={faArrowAltCircleRight} className=\"mr-2\" />\n            View Blog\n          </Link>\n        ) : (\n          <div>Comming soon...</div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default BlogCards;\n","import React, { FC } from 'react'\nimport BlogCards from '../../../molecules/blog-cards'\n\nconst Blog : FC = () => (\n  <section className=\"latest-blog-section p-3 p-lg-5\">\n    <div className=\"container\">\n      <h2 className=\"section-title font-weight-bold mb-5\">\n        Latest Blog Posts\n      </h2>\n      <BlogCards />\n    </div>\n  </section>\n)\n\nexport default Blog\n","import React, { FC, PropsWithChildren } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\n// import { Image } from \"../../atoms\"\n\nexport interface IProjectCard {\n  tags: Array<string>;\n  title: string;\n  img: string;\n  path: string;\n  description: string;\n  client: string;\n}\n\nconst ProjectCard: FC<IProjectCard> = ({\n  tags,\n  title,\n  img,\n  path,\n  description,\n  client,\n}: PropsWithChildren<IProjectCard>) => {\n  return (\n    <div className={`col-md-6 mb-5 ${tags.map((tag: string) => tag)}`}>\n      <div className=\"card project-card\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-lg-4 card-img-holder\">\n            {/* <Image img={img} className=\"card-img\" /> */}\n          </div>\n          <div className=\"col-lg-8\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">\n                <Link to={`/portfolio/${path}`} className=\"theme-link\">\n                  {title}\n                </Link>\n              </h5>\n              <p className=\"card-text\">{description}</p>\n              <p className=\"card-text\">\n                <small className=\"text-muted\">Client: {client}</small>\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"link-mask\">\n          <Link className=\"link-mask-link\" to={`/portfolio/${path}`} />\n          <div className=\"link-mask-text\">\n            <Link className=\"btn btn-secondary\" to={`/portfolio/${path}`}>\n              <FontAwesomeIcon icon={faEye} className=\"mr-2\" />\n              View Case Study\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import { faArrowAltCircleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectCard, { IProjectCard } from \"../../atoms/project-card-element\";\n\nconst projects: Array<IProjectCard> = [];\n\nconst ProjectCards: FC = () => {\n  return (\n    <>\n      <div className=\"row\">\n        {projects.map((project, i) => (\n          <ProjectCard\n            key={i}\n            client={project.client}\n            description={project.description}\n            img={project.img}\n            path={project.path}\n            tags={project.tags}\n            title={project.title}\n          />\n        ))}\n      </div>\n      <div className=\"text-center py-3\">\n        {projects.length > 0 ? (\n          <Link to=\"/portfolio\" className=\"btn btn-primary\">\n            <FontAwesomeIcon icon={faArrowAltCircleRight} className=\"mr-2\" />\n            View Portfolio\n          </Link>\n        ) : (\n          <div>Comming soon...</div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ProjectCards;\n","import React, { FC } from 'react'\nimport ProjectCards from '../../../molecules/project-cards'\n\nconst Featured: FC = () => (\n  <section className=\"featured-section p-3 p-lg-5\">\n    <div className=\"container\">\n      <h2 className=\"section-title font-weight-bold mb-5\">\n        Featured Projects\n      </h2>\n      <ProjectCards />\n    </div>\n  </section>\n)\n\nexport default Featured\n","import { IconDefinition } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faAndroid,\n  faCss3,\n  faDev,\n  faEmber,\n  faGitAlt,\n  faHtml5,\n  faJsSquare,\n  faNodeJs,\n  faPython,\n  faReact,\n  faSwift,\n  faVuejs,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { FC } from \"react\";\n// import { Link } from \"react-router-dom\";\n\ninterface IIcons {\n  name: IconDefinition;\n  className?: string;\n}\n\ninterface ISkills {\n  title: string;\n  description: string;\n  icons: Array<IIcons>;\n}\n\nconst skills: Array<ISkills> = [\n  {\n    title: \"JavaScript & Typescript\",\n    description:\n      \"JavaScript is a client-side scripting language, which means the source code is processed by the client's web browser rather than on the web server and TypeScript is an open-source language which builds on JavaScript, one of the world’s most used tools, by adding static type definitions.\",\n    icons: [{ name: faJsSquare }],\n  },\n  {\n    title: \"Vue, React & Ember\",\n    description:\n      \"The aim of frameworks is to provide a common structure so that developers don’t have to redo it from scratch and can reuse the code provided. In this way, frameworks allow us to cut out much of the work and save a lot of time.\",\n    icons: [\n      { name: faVuejs },\n      { name: faReact, className: \"ml-3\" },\n      { name: faEmber, className: \"ml-3\" },\n    ],\n  },\n  {\n    title: \"Node.js\",\n    description:\n      \"Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. This means is a server-side platform wrapped around the JavaScript language for building scalable, event-driven applications.\",\n    icons: [{ name: faNodeJs }],\n  },\n  {\n    title: \"Python & Django\",\n    description:\n      \"Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design. Built by experienced developers, it takes care of much of the hassle of Web development, so you can focus on writing your app.\",\n    icons: [{ name: faPython }],\n  },\n  {\n    title: \"Git\",\n    description:\n      \"It is a distributed version-control system for tracking changes in source code during software development. It is designed for coordinating work among programmers. Its goals include speed, data integrity, and support for distributed, non-linear workflows.\",\n    icons: [{ name: faGitAlt }],\n  },\n  {\n    title: \"DevOps\",\n    description:\n      \"It is a set of practices that combines software development (Dev) and information-technology operations (Ops) which aims to shorten the systems development life cycle and provide continuous delivery with high software quality.\",\n    icons: [{ name: faDev }],\n  },\n  {\n    title: \"HTML & CSS\",\n    description:\n      \"HTML (the Hypertext Markup Language) and CSS (Cascading Style Sheets) are two of the core technologies for building Web pages. HTML provides the structure of the page, CSS the (visual and aural) layout, for a variety of devices.\",\n    icons: [{ name: faHtml5 }, { name: faCss3, className: \"ml-3\" }],\n  },\n  {\n    title: \"Mobile Apps\",\n    description:\n      \"Android (Java or Kotlin) and iOS (Swift) are two of the most important technologies for building mobile applications. These two tools take full advantage of the use of their hardware functionalities. Being more efficient and faster.\",\n    icons: [{ name: faAndroid }, { name: faSwift, className: \"ml-3\" }],\n  },\n];\n\nconst Overview: FC = () => {\n  return (\n    <section className=\"overview-section p-3 p-lg-5\">\n      <div className=\"container\">\n        <h2 className=\"section-title font-weight-bold mb-3\">What I do</h2>\n        <div className=\"section-intro mb-5\">\n          I have 2 years experience building software for clients. Below is a\n          quick overview of my main technical skill sets and technologies I use.\n          {/* Want to find out more about my experience? Check out my\n          <Link to=\"/portfolio\"> project portfolio</Link>. */}\n        </div>\n        <div className=\"row\">\n          {skills.map((skill, i) => {\n            return (\n              <div className=\"item col-6 col-lg-3\" key={i}>\n                <div className=\"item-inner\">\n                  <div className=\"item-icon\">\n                    {skill.icons.map((icon, i) => (\n                      <FontAwesomeIcon\n                        key={i}\n                        icon={icon.name}\n                        className={icon.className && icon.className}\n                      />\n                    ))}\n                  </div>\n                  <h3 className=\"item-title\">{skill.title}</h3>\n                  <div className=\"item-desc\">{skill.description}</div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        {/*<div className=\"text-center py-3\">\n        <Link to=\"/services\" className=\"btn btn-primary\">\n          <FontAwesomeIcon icon={faArrowAltCircleRight} className=\"mr-2\" />Services &amp; Pricing\n        </Link>\n      </div>*/}\n      </div>\n    </section>\n  );\n};\n\nexport default Overview;\n","import React, { FC, PropsWithChildren } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\n// import { Image } from \"../../atoms\";\n\nexport interface ITestimonialCard {\n  message: string;\n  name: string;\n  lastname: string;\n  job: string;\n  company: string;\n  avatar: string;\n}\n\nconst TestimonialCard: FC<ITestimonialCard> = ({\n  message,\n  name,\n  lastname,\n  job,\n  company,\n  avatar,\n}: PropsWithChildren<ITestimonialCard>) => {\n  return (\n    <div className=\"item\">\n      <div className=\"quote-holder\">\n        <blockquote className=\"quote-content\">{message}</blockquote>\n        <FontAwesomeIcon icon={faQuoteLeft} />\n      </div>\n      <div className=\"source-holder\">\n        <div className=\"source-profile\">\n          {/* <Image img={avatar} /> */}\n        </div>\n        <div className=\"meta\">\n          <div className=\"name\">\n            {name} {lastname}\n          </div>\n          <div className=\"info\">\n            {job}, {company}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TestimonialCard\n","import React, { FC } from \"react\";\nimport TestimonialCard, {\n  ITestimonialCard,\n} from \"../../atoms/testimonial-card-element\";\n\nconst testimonials: Array<ITestimonialCard> = [];\n\nconst TestimonialCards: FC = () => {\n  return (\n    <>\n      {testimonials.length > 0 ? (\n        <div className=\"testimonial-carousel owl-carousel owl-theme\">\n          {testimonials.map((testimonial, i) => (\n            <TestimonialCard\n              key={i}\n              avatar={testimonial.avatar}\n              company={testimonial.company}\n              job={testimonial.job}\n              lastname={testimonial.lastname}\n              message={testimonial.message}\n              name={testimonial.name}\n            />\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center\">Comming soon...</div>\n      )}\n    </>\n  );\n};\n\nexport default TestimonialCards;\n","import React, { FC } from \"react\";\nimport TestimonialCards from \"../../../molecules/testimonial-cards\";\n\nconst Testimonials: FC = () => (\n  <section className=\"testimonials-section p-3 p-lg-5\">\n    <div className=\"container\">\n      <h2 className=\"section-title font-weight-bold mb-5\">Testimonials</h2>\n      <TestimonialCards />\n    </div>\n  </section>\n);\n\nexport default Testimonials;\n","import { FC, PropsWithChildren } from \"react\";\nimport { Helmet } from \"react-helmet\";\n\ntype Meta = JSX.IntrinsicElements[\"meta\"];\n\ninterface SeoProps {\n  title?: string;\n  description?: string;\n  lang?: string;\n  meta?: Meta[] | undefined;\n}\n\nconst SEO : FC<SeoProps> = ({\n  title = \"Not Found\",\n  description,\n  lang = \"en\",\n  meta,\n  children,\n}: PropsWithChildren<SeoProps>) => (\n  <Helmet\n    title=\"Luis Díaz\"\n    titleTemplate={`%s | ${title}`}\n    meta={\n      meta\n        ? ([\n            {\n              name: `description`,\n              content: description\n                ? description\n                : \"Web site created using create-react-app\",\n            },\n          ] as Meta[]).concat(meta)\n        : []\n    }\n  >\n    <html lang={lang} />\n    <meta charSet=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n\n    <link rel=\"icon\" href=\"favicon.png\" />\n    <link rel=\"apple-touch-icon\" href=\"favicon.png\" />\n    <link rel=\"manifest\" href=\"manifest.json\" />\n    {children}\n  </Helmet>\n);\n\nexport default SEO;\n","import Home from \"../components/templates/home/default\";\n\nexport default Home\n","import React, { FC } from \"react\";\nimport About from \"../../../organisms/home/about\";\nimport Blog from \"../../../organisms/home/blog\";\nimport Featured from \"../../../organisms/home/featured\";\nimport Overview from \"../../../organisms/home/overview\";\nimport Testimonials from \"../../../organisms/home/testimonials\";\nimport SEO from \"../../../organisms/seo\";\n\nconst Home : FC = () => {\n  return (\n    <div>\n      <SEO title=\"Home\">\n        <link\n          rel=\"stylesheet\"\n          href=\"assets/css/owlcarousel/owl.carousel.min.css\"\n          type=\"text/css\"\n        />\n        <link\n          rel=\"stylesheet\"\n          href=\"assets/css/owlcarousel/owl.theme.default.css\"\n          type=\"text/css\"\n        />\n        <script defer src=\"assets/js/testimonials.js\" type=\"text/javascript\" />\n      </SEO>\n      <About />\n      <Overview />\n      <div className=\"container\">\n        <hr />\n      </div>\n      <Testimonials />\n      <div className=\"container\">\n        <hr />\n      </div>\n      <Featured />\n      <div className=\"container\">\n        <hr />\n      </div>\n      <Blog />\n    </div>\n  );\n};\n\nexport default Home\n","import React, { FC } from \"react\"\n\nimport SEO from \"../components/organisms/seo\"\nimport { Link } from \"react-router-dom\"\n\nconst NotFoundPage: FC = () => (\n  <>\n    <SEO />\n    <section className=\"theme-bg-light\">\n      <div className=\"container\">\n        <div className=\"row vh-100 align-items-center justify-content-center\">\n          <div className=\"col-10\">\n            <h1 className=\"text-center\">NOT FOUND</h1>\n            <p className=\"text-center\">\n              You just hit a route that doesn&#39;t exist... the sadness.\n            </p>\n            <div className=\"row justify-content-center\">\n              <Link to=\"/\" className=\"btn btn-primary\">\n                Go to Home\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </>\n)\n\nexport default NotFoundPage\n","import { FC } from \"react\"\n\nconst Footer : FC = () => {\n  return (\n    <footer className=\"footer text-center py-4\">\n      <small className=\"copyright\">\n        Template Copyright &copy;\n        <a\n          href=\"https://themes.3rdwavemedia.com/\"\n          rel=\"noreferrer noopener\"\n          target=\"_blank\"\n        >\n          3rd Wave Media\n        </a>\n      </small>\n    </footer>\n  )\n}\n\nexport default Footer\n\n","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type User = INode & IUser & {\n  id: Scalars['Int'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  email: Scalars['String'];\n  role: Role;\n};\n\nexport type INode = {\n  id: Scalars['Int'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n};\n\nexport type IUser = {\n  id: Scalars['Int'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  email: Scalars['String'];\n  role: Role;\n};\n\nexport type Role = INode & IRole & {\n  id: Scalars['Int'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  name: Scalars['String'];\n};\n\nexport type IRole = {\n  id: Scalars['Int'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  name: Scalars['String'];\n};\n\nexport type Query = {\n  users: Array<User>;\n  user: User;\n  me: User;\n  roles: Array<Role>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['Float'];\n};\n\nexport type Mutation = {\n  logout: LogoutResponse;\n  login: User;\n  register: RegisterResponse;\n  createRole: Role;\n};\n\n\nexport type MutationLoginArgs = {\n  password: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationRegisterArgs = {\n  password: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationCreateRoleArgs = {\n  name: Scalars['String'];\n};\n\nexport type LogoutResponse = {\n  success: Scalars['Boolean'];\n};\n\nexport type RegisterResponse = {\n  accessToken: Scalars['String'];\n  user: IUser;\n};\n\nexport type LoginMutationVariables = Exact<{\n  email: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\n\nexport type LoginMutation = { login: (\n    Pick<User, 'id' | 'email' | 'updatedAt' | 'createdAt'>\n    & { role: Pick<Role, 'id' | 'name' | 'updatedAt' | 'createdAt'> }\n  ) };\n\nexport type RegisterMutationVariables = Exact<{\n  email: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\n\nexport type RegisterMutation = { register: (\n    Pick<RegisterResponse, 'accessToken'>\n    & { user: Pick<User, 'id' | 'email' | 'updatedAt' | 'createdAt'> }\n  ) };\n\nexport type LogoutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LogoutMutation = { logout: Pick<LogoutResponse, 'success'> };\n\nexport type UsersQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type UsersQuery = { users: Array<Pick<User, 'id' | 'email'>> };\n\nexport type MeQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type MeQuery = { me: (\n    Pick<User, 'id' | 'email' | 'createdAt' | 'updatedAt'>\n    & { role: Pick<Role, 'id' | 'name' | 'updatedAt' | 'createdAt'> }\n  ) };\n\n\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    id\n    email\n    updatedAt\n    createdAt\n    role {\n      id\n      name\n      updatedAt\n      createdAt\n    }\n  }\n}\n    `;\nexport type LoginMutationFn = Apollo.MutationFunction<LoginMutation, LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<LoginMutation, LoginMutationVariables>) {\n        return Apollo.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument, baseOptions);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<LoginMutation, LoginMutationVariables>;\nexport const RegisterDocument = gql`\n    mutation Register($email: String!, $password: String!) {\n  register(email: $email, password: $password) {\n    accessToken\n    user {\n      id\n      email\n      updatedAt\n      createdAt\n    }\n  }\n}\n    `;\nexport type RegisterMutationFn = Apollo.MutationFunction<RegisterMutation, RegisterMutationVariables>;\n\n/**\n * __useRegisterMutation__\n *\n * To run a mutation, you first call `useRegisterMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRegisterMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [registerMutation, { data, loading, error }] = useRegisterMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useRegisterMutation(baseOptions?: Apollo.MutationHookOptions<RegisterMutation, RegisterMutationVariables>) {\n        return Apollo.useMutation<RegisterMutation, RegisterMutationVariables>(RegisterDocument, baseOptions);\n      }\nexport type RegisterMutationHookResult = ReturnType<typeof useRegisterMutation>;\nexport type RegisterMutationResult = Apollo.MutationResult<RegisterMutation>;\nexport type RegisterMutationOptions = Apollo.BaseMutationOptions<RegisterMutation, RegisterMutationVariables>;\nexport const LogoutDocument = gql`\n    mutation Logout {\n  logout {\n    success\n  }\n}\n    `;\nexport type LogoutMutationFn = Apollo.MutationFunction<LogoutMutation, LogoutMutationVariables>;\n\n/**\n * __useLogoutMutation__\n *\n * To run a mutation, you first call `useLogoutMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLogoutMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [logoutMutation, { data, loading, error }] = useLogoutMutation({\n *   variables: {\n *   },\n * });\n */\nexport function useLogoutMutation(baseOptions?: Apollo.MutationHookOptions<LogoutMutation, LogoutMutationVariables>) {\n        return Apollo.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument, baseOptions);\n      }\nexport type LogoutMutationHookResult = ReturnType<typeof useLogoutMutation>;\nexport type LogoutMutationResult = Apollo.MutationResult<LogoutMutation>;\nexport type LogoutMutationOptions = Apollo.BaseMutationOptions<LogoutMutation, LogoutMutationVariables>;\nexport const UsersDocument = gql`\n    query Users {\n  users {\n    id\n    email\n  }\n}\n    `;\n\n/**\n * __useUsersQuery__\n *\n * To run a query within a React component, call `useUsersQuery` and pass it any options that fit your needs.\n * When your component renders, `useUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUsersQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUsersQuery(baseOptions?: Apollo.QueryHookOptions<UsersQuery, UsersQueryVariables>) {\n        return Apollo.useQuery<UsersQuery, UsersQueryVariables>(UsersDocument, baseOptions);\n      }\nexport function useUsersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<UsersQuery, UsersQueryVariables>) {\n          return Apollo.useLazyQuery<UsersQuery, UsersQueryVariables>(UsersDocument, baseOptions);\n        }\nexport type UsersQueryHookResult = ReturnType<typeof useUsersQuery>;\nexport type UsersLazyQueryHookResult = ReturnType<typeof useUsersLazyQuery>;\nexport type UsersQueryResult = Apollo.QueryResult<UsersQuery, UsersQueryVariables>;\nexport const MeDocument = gql`\n    query Me {\n  me {\n    id\n    email\n    role {\n      id\n      name\n      updatedAt\n      createdAt\n    }\n    createdAt\n    updatedAt\n  }\n}\n    `;\n\n/**\n * __useMeQuery__\n *\n * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.\n * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMeQuery(baseOptions?: Apollo.QueryHookOptions<MeQuery, MeQueryVariables>) {\n        return Apollo.useQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n      }\nexport function useMeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<MeQuery, MeQueryVariables>) {\n          return Apollo.useLazyQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n        }\nexport type MeQueryHookResult = ReturnType<typeof useMeQuery>;\nexport type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;\nexport type MeQueryResult = Apollo.QueryResult<MeQuery, MeQueryVariables>;","import { useApolloClient } from \"@apollo/client\";\nimport React, {\n  createContext,\n  Dispatch,\n  FC,\n  SetStateAction,\n  useState,\n} from \"react\";\nimport { useLogoutMutation, User } from \"../generated/graphql\";\n\ninterface IAuthContext {\n  user: User | null;\n  isLoggedIn: boolean;\n  setUser?: Dispatch<SetStateAction<User | null>>;\n  setIsLoggedIn?: Dispatch<React.SetStateAction<boolean>>;\n  logout?: () => void;\n}\n\nexport const AuthContext = createContext<IAuthContext>({\n  isLoggedIn: false,\n  user: null,\n});\n\nconst AuthProvider: FC = (props) => {\n  const u = localStorage.getItem(\"user\") as unknown as User\n  const client = useApolloClient();\n  const [user, setUser] = useState<User | null>(u);\n  const [isLoggedIn, setIsLoggedIn] = useState(!!u);\n  const [logoutMutation] = useLogoutMutation();\n\n  const logout = async () => {\n    try {\n      setUser(null);\n      setIsLoggedIn(false);\n      localStorage.clear();\n      await logoutMutation();\n      await client.clearStore();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isLoggedIn,\n        setUser,\n        setIsLoggedIn,\n        logout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","import {\n  ApolloClient,\n  ApolloProvider,\n  createHttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\nimport { FC } from \"react\";\nimport AuthProvider, { AuthContext } from \"./auth.provider\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: createHttpLink({\n    credentials: \"include\",\n    uri: \"http://localhost:4000/graphql\",\n  }),\n});\n\nexport const context = {\n  client,\n  auth: AuthContext\n}\n\nconst Providers: FC = (props) => {\n  return (\n    <ApolloProvider client={client}>\n      <AuthProvider>{props.children}</AuthProvider>\n    </ApolloProvider>\n  );\n};\n\nexport default Providers;\n","import React, { PropsWithChildren } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  IconName,\n  IconPrefix,\n  library,\n} from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { NavLink } from \"react-router-dom\";\nimport { FC } from \"react\";\n\nlibrary.add(fas);\n\nexport interface IPageList {\n  name: string;\n  path: string;\n  icon: IconName;\n  prefix: IconPrefix;\n}\n\nconst PageListElement: FC<IPageList> = ({\n  name,\n  path,\n  icon,\n  prefix,\n}: PropsWithChildren<IPageList>) => {\n  return (\n    <NavLink to={path} activeClassName=\"active\" className=\"nav-item\">\n      <li className=\"nav-link\">\n        <FontAwesomeIcon icon={[prefix, icon]} className=\"mr-2 fa-fw\" />\n        {name}\n      </li>\n    </NavLink>\n  );\n};\n\nexport default PageListElement;\n","import React, { FC } from \"react\";\nimport PageListElement, {\n  IPageList,\n} from \"../../atoms/page-list-element\";\n\nconst pages: Array<IPageList> = [\n  {\n    icon: \"user\",\n    prefix: \"fas\",\n    path: \"/\",\n    name: \"About me\",\n  },\n  // {\n  //   icon: \"laptop-code\",\n  //   prefix: \"fas\",\n  //   path: \"/portfolio\",\n  //   name: \"Portfolio\",\n  // },\n  // {\n  //   icon: \"briefcase\",\n  //   prefix: \"fas\",\n  //   path: \"/services\",\n  //   name: \"Services\",\n  // },\n  // {\n  //   icon: \"file-alt\",\n  //   prefix: \"fas\",\n  //   path: \"/resume\",\n  //   name: \"Resume\",\n  // },\n  // {\n  //   icon: \"blog\",\n  //   prefix: \"fas\",\n  //   path: \"/blog\",\n  //   name: \"Blog\",\n  // },\n  // {\n  //   icon: \"envelope-open-text\",\n  //   prefix: \"fas\",\n  //   path: \"/contact\",\n  //   name: \"Contact\",\n  // },\n];\n\nconst PagesList: FC = () => {\n  return (\n    <>\n      {pages.map((page, i) => (\n        <PageListElement\n          key={i}\n          name={page.name}\n          path={page.path}\n          icon={page.icon}\n          prefix={page.prefix}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default PagesList;\n","import React, { FC, PropsWithChildren } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  IconName,\n  IconPrefix,\n  library,\n} from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\n\nlibrary.add(fab);\n\nexport interface ISocialList {\n  href: string;\n  icon: IconName;\n  prefix: IconPrefix;\n}\n\nconst SocialListElement: FC<ISocialList> = ({\n  href,\n  icon,\n  prefix,\n}: PropsWithChildren<ISocialList>) => {\n  return (\n    <li className=\"list-inline-item\">\n      <a href={href} target=\"_blank\" rel=\"noreferrer\">\n        <FontAwesomeIcon className=\"fa-fw\" icon={[prefix, icon]} />\n      </a>\n    </li>\n  );\n};\n\nexport default SocialListElement;\n","import React, { FC } from \"react\";\nimport SocialListElement, {\n  ISocialList,\n} from \"../../atoms/social-list-element\";\n\nconst socialMedias: Array<ISocialList> = [\n  {\n    icon: \"github-alt\",\n    prefix: \"fab\",\n    href: \"https://github.com/luisedudiaz\",\n  },\n  {\n    icon: \"stack-overflow\",\n    prefix: \"fab\",\n    href: \"https://stackoverflow.com/users/13654760/luis-eduardo-d%c3%adaz\",\n  },\n  {\n    icon: \"linkedin-in\",\n    prefix: \"fab\",\n    href: \"https://linkedin.com/in/luisedudiaz\"\n  }\n];\n\nconst SocialsList: FC = () => {\n  return (\n    <>\n      {socialMedias.map((socialMedia, i) => (\n        <SocialListElement\n          key={i}\n          href={socialMedia.href}\n          icon={socialMedia.icon}\n          prefix={socialMedia.prefix}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default SocialsList;\n","import { faAdjust, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { FC, useContext, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport { Link } from \"react-router-dom\";\nimport { context } from \"../../../providers\";\nimport PagesList from \"../../molecules/pages-list\";\nimport SocialsList from \"../../molecules/socials-list\";\n\nconst Header : FC = () => {\n  const isChecked = JSON.parse(sessionStorage.getItem(\"dark-mode\")!);\n  const { isLoggedIn, logout } = useContext(context.auth);\n  const [checked, setChecked] = useState(isChecked);\n\n  const handleChangeDarkMode = () => {\n    sessionStorage.setItem(\"dark-mode\", JSON.stringify(!checked));\n    setChecked(!checked);\n  };\n\n  return (\n    <header className=\"header text-center\">\n      <Helmet>\n        <body className={checked ? \"dark-mode\" : \"\"} />\n      </Helmet>\n      <div className=\"force-overflow\">\n        {isLoggedIn && (\n          <h1 className=\"blog-name pt-lg-4 mb-0 text-right mr-3\">\n            <FontAwesomeIcon onClick={() => logout!()} icon={faSignOutAlt} />\n          </h1>\n        )}\n        <h1 className=\"blog-name pt-lg-4 mb-0\">\n          <Link to=\"/\">Luis Díaz</Link>\n        </h1>\n        <nav className=\"navbar navbar-expand-lg navbar-dark\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navigation\"\n            aria-controls=\"navigation\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div id=\"navigation\" className=\"collapse navbar-collapse flex-column\">\n            <div className=\"profile-section pt-3 pt-lg-0\">\n              {/*<Image name=\"profile\" />*/}\n              <div className=\"bio mb-3\">\n                Hi, my name is Luis Díaz and I'm a software engineer. Welcome to\n                my personal website!\n              </div>\n              <ul className=\"social-list list-inline py-2 mx-auto\">\n                <SocialsList />\n              </ul>\n              <hr />\n            </div>\n            <ul className=\"navbar-nav flex-column text-left\">\n              <PagesList />\n            </ul>\n            {/*\n            <div className=\"my-2\">\n              <a className=\"btn btn-primary\" href=\"contact.html\" target=\"_blank\">\n              <i className=\"fas fa-paper-plane mr-2\"/>Hire Me</a>\n            </div> */}\n\n            {!isLoggedIn && (\n              <div className=\"my-2\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  data-toggle=\"modal\"\n                  data-target=\"#login\"\n                >\n                  Login\n                </button>\n              </div>\n            )}\n            <hr />\n            <div className=\"dark-mode-toggle text-center w-100\">\n              <hr className=\"mb-4\" />\n              <h4 className=\"toggle-name mb-3 \">\n                <FontAwesomeIcon icon={faAdjust} className=\"mr-1\" />\n                Dark Mode\n              </h4>\n              <input\n                className=\"toggle\"\n                id=\"darkmode\"\n                type=\"checkbox\"\n                defaultChecked={checked}\n                onChange={handleChangeDarkMode}\n              />\n              <label className=\"toggle-btn mx-auto mb-0\" htmlFor=\"darkmode\" />\n            </div>\n          </div>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { FC, FormEvent, useContext, useState } from \"react\";\nimport $ from 'jquery';\nimport { useLoginMutation, User } from \"../../../generated/graphql\";\nimport { context } from \"../../../providers\";\n\nconst Login: FC = () => {\n  const [errors, setErrors] = useState<Array<string>>([]);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [login] = useLoginMutation();\n\n  const { isLoggedIn, setUser, setIsLoggedIn } = useContext(\n    context.auth\n  );\n\n  const hasError = (key: string) => {\n    return errors.indexOf(key) !== -1;\n  };\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const e = errors;\n    if (email === \"\" && !errors.includes(\"email\")) {\n      e.push(\"email\");\n    }\n    if (password === \"\" && !errors.includes(\"password\")) {\n      e.push(\"password\");\n    }\n    if (e.length > 0) {\n      setErrors([...errors, ...e]);\n    } else {\n      const { data } = await login({\n        variables: { email, password },\n      });\n      if (data) {\n        const user: User = data.login;\n        setEmail(\"\");\n        setPassword(\"\");\n        setUser!(user);\n        setIsLoggedIn!(true);\n        localStorage.setItem(\"user\", JSON.stringify(user))\n        $('.close').trigger(\"click\");\n        document.querySelector(\".modal-backdrop\")?.remove()\n        document.querySelector(\".modal-open\")?.classList.remove('modal-open')\n      }\n    }\n  };\n\n  const handleEmailInput = (event: FormEvent<HTMLInputElement>) => {\n    setEmail(event.currentTarget.value);\n    const expression = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    const validEmail = expression.test(\n      String(event.currentTarget.value).toLowerCase()\n    );\n    if (validEmail) {\n      const index = errors.indexOf(\"email\");\n      if (index !== -1) {\n        errors.splice(index, 1);\n      }\n    } else {\n      if (errors.indexOf(\"email\")) {\n        errors.push(\"email\");\n      }\n    }\n  };\n\n  const handlePasswordInput = (event: FormEvent<HTMLInputElement>) => {\n    setPassword(event.currentTarget.value);\n    // const expression = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/\n\n    // const validPassword = expression.test(String(event.currentTarget.value))\n    // console.log(validPassword);\n\n    // if (validPassword) {\n    const index = errors.indexOf(\"password\");\n    if (index !== -1) {\n      errors.splice(index, 1);\n    }\n    // } else {\n    //   if (errors.indexOf(\"password\")) {\n    //     errors.push(\"password\");\n    //   }\n    // }\n  };\n\n  return !isLoggedIn ? (\n    <div\n      className=\"modal fade\"\n      id=\"login\"\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-hidden=\"true\"\n      data-backdrop=\"static\"\n      data-keyboard=\"false\"\n    >\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-body\">\n            <form\n              className=\"needs-validation\"\n              noValidate\n              onSubmit={handleSubmit}\n            >\n              <div className=\"row mb-3\">\n                <div className=\"col-10\">\n                  <h1>Login</h1>\n                </div>\n                <div className=\"col-2\">\n                  <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label className=\"sr-only\">Email</label>\n                    <input\n                      required\n                      value={email}\n                      onChange={handleEmailInput}\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      className={\n                        hasError(\"email\")\n                          ? \"form-control is-invalid\"\n                          : \"form-control\"\n                      }\n                      placeholder=\"Email\"\n                    />\n                    <div className=\"invalid-feedback\">Email not valid</div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label className=\"sr-only\">Password</label>\n                    <input\n                      required\n                      value={password}\n                      onChange={handlePasswordInput}\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      className={\n                        hasError(\"password\")\n                          ? \"form-control is-invalid\"\n                          : \"form-control\"\n                      }\n                      placeholder=\"Password\"\n                    />\n                    <div className=\"invalid-feedback\">Password not valid</div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    // data-dismiss={email !== \"\" && password !== \"\" && errors.length === 0 ? \"modal\": \"\"}\n                  >\n                    Login\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default Login;\n","import React, { FC, PropsWithChildren, ReactNode } from \"react\";\nimport Footer from \"../../../organisms/footer\";\nimport Header from \"../../../organisms/header\";\nimport Login from \"../../../organisms/login\";\n\nconst Layout : FC = ({ children }: PropsWithChildren<ReactNode>) => (\n  <>\n    <Header />\n    <div className=\"main-wrapper\">\n      {children}\n      <Footer />\n    </div>\n    <Login />\n  </>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, RouteProps } from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport NotFoundPage from \"./pages/404\";\nimport Layout from \"./components/templates/layout/default\";\n\nconst routes: Array<RouteProps> = [\n  {\n    path: \"/\",\n    component: Home,\n  },\n  {\n    path: \"*\",\n    component: NotFoundPage,\n  },\n];\n\nconst Routes: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          {routes.map(({ component, path }: RouteProps, i: number) => (\n            <Route key={i} exact component={component} path={path} />\n          ))}\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./routes\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/index.scss\";\nimport Providers from \"./providers\";\n\nReactDOM.render(\n  <Providers>\n    <Routes />\n  </Providers>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}